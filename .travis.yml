language: python
# Define language

os:
  - linux
  #- osx
# Define operating system's to test

after_success:
  - coverage combine .coverage_*
  - bash <(curl -s https://codecov.io/bash)
  # Combines and sends coverage reports to codecov
# Define actions after successful build

python:
  #- "3.4"
  #- "3.5"
  - "3.6"      # current default Python on Travis CI
  #- "3.7"
  #- "3.8"
  #- "3.8-dev"  # 3.8 development branch
  #- "nightly"  # nightly build
# Specify versions of language to test

install:
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
  - bash miniconda.sh -b -p $HOME/miniconda
  - source "$HOME/miniconda/etc/profile.d/conda.sh"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  # Installing conda
  
  - conda info -a
  # Useful for debugging any issues with conda

  - conda env create --file pseudo-it.yml
  - conda activate pseudo-it
  # Loading the pseudo-it conda environment

  - pip install coverage
  # Installing coverage for coverage reports for codecov
# Install dependencies

# command to run tests
script:
  - COVERAGE_FILE=.coverage_v coverage run pseudo_it.py --version
  - COVERAGE_FILE=.coverage_dep coverage run pseudo_it.py --depcheck -samtools samtools -picard picard -bwa bwa -gatk gatk -bedtools bedtools -bcftools bcftools
  - COVERAGE_FILE=.coverage_norun coverage run pseudo_it.py -ref example-data/example.fa -pe1 example-data/example.pe1.fq.gz -pe2 example-data/example.pe2.fq.gz -o example-data/example-out-paired/ -tmp tmp-pi-out -i 2 -p 8 --norun --quiet
  - COVERAGE_FILE=.coverage_dry coverage run pseudo_it.py -ref example-data/example.fa -pe1 example-data/example.pe1.fq.gz -pe2 example-data/example.pe2.fq.gz -o example-data/example-out-paired/ -tmp tmp-pi-out -i 2 -p 8 --dryrun
  - COVERAGE_FILE=.coverage_paired coverage run pseudo_it.py -ref example-data/example.fa -pe1 example-data/example.pe1.fq.gz -pe2 example-data/example.pe2.fq.gz -o example-data/example-out-paired/ -tmp tmp-pi-out -i 2 -p 8 --overwrite  
  - COVERAGE_FILE=.coverage_full coverage run pseudo_it.py -ref example-data/example.fa -pe1 example-data/example.pe1.fq.gz -pe2 example-data/example.pe2.fq.gz -se example-data/example.single.fq.gz -o example-data/example-out-full/ -tmp tmp-pi-out -i 2 -p 8
  - COVERAGE_FILE=.coverage_overwrite coverage run pseudo_it.py -ref example-data/example.fa -pe1 example-data/example.pe1.fq.gz -pe2 example-data/example.pe2.fq.gz -se example-data/example.single.fq.gz -o example-data/example-out-full/ -tmp tmp-pi-out -i 2 -p 8 --overwrite
  - COVERAGE_FILE=.coverage_resume coverage run pseudo_it.py -ref example-data/example.fa -pe1 example-data/example.pe1.fq.gz -pe2 example-data/example.pe2.fq.gz -se example-data/example.single.fq.gz -resume example-data/example-out-full/ -tmp tmp-pi-out -i 3 -p 8
  - COVERAGE_FILE=.coverage_premap coverage run pseudo_it.py -ref example-data/example.fa -pe1 example-data/example.pe1.fq.gz -pe2 example-data/example.pe2.fq.gz -bam example-data/example-premap.bam.gz -o example-data/example-out-premap/ -tmp tmp-pi-out -i 2 -p 8 
  - COVERAGE_FILE=.coverage_noindels coverage run pseudo_it.py -ref example-data/example.fa -pe1 example-data/example.pe1.fq.gz -pe2 example-data/example.pe2.fq.gz -resume example-data/example-out-paired/ -tmp tmp-pi-out -i 2 -p 8 --noindels
  - COVERAGE_FILE=.coverage_diploid coverage run pseudo_it.py -ref example-data/example.fa -pe1 example-data/example.pe1.fq.gz -pe2 example-data/example.pe2.fq.gz -resume example-data/example-out-paired/ -tmp tmp-pi-out -i 2 -p 8 --diploid
  - COVERAGE_FILE=.coverage_map coverage run pseudo_it.py -ref example-data/example.fa -pe1 example-data/example.pe1.fq.gz -pe2 example-data/example.pe2.fq.gz -se example-data/example.single.fq.gz -o example-data/example-out-map/ -tmp example-data/example-out-map/tmp/ -p 8 --maponly --keepall
# Tests to run